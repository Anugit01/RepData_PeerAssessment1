ls
ls()
undebug()
undebug(ls)
debug(ls)
ls()
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rnorm?
set.seed()
set.seed(10)
x <- rep(0:1, each = 5)
x
library(swirl)
ls()
rm(list=ls())
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace = TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(100, size = 1, prob = 0.7)
rbinom(n = 100, size = 1, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
suma(flips2)
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10, mean =100, sd =25)
?rpois
n <- rpois(5)
rpois(n =5,lambda =10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans( my_pois)
hist(cm)
bye
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
data(cars)
?cars
head(cars)
dim(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist ,ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance")
?plot
plot(main = "My Plot",x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub  = "My Plot Subtitle")
bye
bye
plot(cars, col = 2)
plot(cars,  xlim = c(10, 15))
?points
plot(cars,pch =2)
data(mtcars)
?boxplot
bye
bye
Type boxplot(formula = mpg ~ cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg )
?rbind
install.packages(RMySQL)
rtools
Sys.getenv("PATH")
system('g++ -v')
system('where make')
install.packages(“RMySQL”, type = “source”)
install.packages(RMySQL, type = “source”)
install.packages(RMySQL, type = source)
install.packages('RMySQL',type='source')
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
?mtcars
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
high
low
high
hist(ppm,col="green".breaks=100)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pollution,pm25~region,col="red")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<- subset(pollution,region="east")
east<- subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
(pollution,plot(pm25,lattitude))
plot(pollution,latitude,pm25)
info
with(pollution, plot(latitude, pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<-subset(pollition, region="west")
west<-subset(pollution, region="west")
west<-subset(pollution, region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
swirl
library(swirl)
swirl()
head(airquality)
xyplot( Ozone~Wind ,data=airquality)
xyplot( Ozone~Wind ,data=airquality,col="red",pch=8)
xyplot( Ozone~Wind ,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
skip()
skip()
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
skip()
table(f)
skip()
skip()
skip()
myedit("plot1.R")
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
?name <- function(variables) {
}
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(swirl)
swirl()
skip
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
points?
?points()
panel.points?
?panel.points?
?panel.points()
?panel.lpoints()
?panel.lpoints()
?panel.points()
lpoints()
?lpoints()
library(swirl)
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
5
5
12
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(swirl)
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(swirl)
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
load(swirl)
load("swirl")
library(swirl)
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
main()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
install.packages("rmarkdown")
getoptions("repos")
getOptions("repos")
getOption("repos")
getOptions("repos")
getOption("repos")
getOption("repo")
getOption("repos")
install.packages("rmarkdown")
getOption("repos")
install.packages('rmarkdown', repos=https://cran.cnr.berkeley.edu/')
install.packages("installr")
library(installr)
updateR()
library(dplyr)
setwd("C:/Users/ANUPAMA/RCode/reproducibleWeek2/RepData_PeerAssessment1")
intsall.packages("dplyr")
intsall.package("dplyr")
install.packages("dplyr")
library(dplyr)
?summarize
?aggregate
